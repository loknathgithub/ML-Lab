import tensorflow as tf
import tensorflow.compat.v1 as tfc

sess = tf.compat.v1.Session()
ISess = tfc.InteractiveSession()


import tensorflow as tf

# Disable eager execution to use Session
tf.compat.v1.disable_eager_execution()

# Use the compatibility session
sess = tf.compat.v1.Session()

# Example operation
a = tf.constant(5.0)
b = tf.constant(6.0)
c = a * b

print(sess.run(c)) 




import warnings
warnings.filterwarnings('ignore')
# Import tensorflow 

print("version: "+tf.__version__)




# lets see Hello world example
hello = tf.constant("Hello ")
world = tf.constant("world!")
# lets print
print(hello+world)




# lets have a look on type of hello and world variables
print(type(hello))
print(type(world))




#with tf.Session() as sess:
#print(sess.run(hello+world)) # concatenation
sess = tf.compat.v1.Session()
print(sess.run(hello+world)) # concatenation



# lets play with numbers
a = tf.constant(5)
b = tf.constant(10)
type(a)




sess = tf.compat.v1.Session()
print( sess.run(a+b) )




# A 4X4 Matrix with all values 10
matA = tf.fill((4,4),10) 
sess = tf.compat.v1.Session()
print( sess.run(matA) )




# Zero values matrix
matB = tf.zeros((2,2))
sess = tf.compat.v1.Session()
print( sess.run(matB) )




# Normal distribution Matrix
matN = tf.random.normal((2,2),mean=0,stddev=1.0)

sess = tf.compat.v1.Session()
print(sess.run(matN))





# Uniform Random Distribution
matU = tf.random.uniform((2,2),minval=10,maxval=100)
sess = tf.compat.v1.Session()
print(sess.run(matU))




import tensorflow as tf
import tensorflow.compat.v1 as tfc

my_tensor = tfc.random_uniform((4, 4), 0, 1)
print(my_tensor)




ISess = tfc.InteractiveSession()

print( ISess.run(tf.zeros((5,5)) ) )
# or
ones = tf.ones((5,5))
print( ones.eval() ) 





# Simple Matrix example
matS1 = tf.constant([[10,5],
                    [3, 9]  ])
matS2 = tf.constant([[10,5],
                    [3, 9]  ])

print( matS1.eval() )
print( matS1.get_shape())

print(tf.matmul(matS1,matS2).eval())




tensorVar = tf.compat.v1.Variable(initial_value=tf.zeros((2,2)) )

# initialize the variables
init = tf.compat.v1.global_variables_initializer()
init.run()

print(tensorVar)
print(tensorVar.eval())
print(init)



ph = tf.compat.v1.placeholder(tf.float32) 
ph





matph1 = tf.compat.v1.placeholder(tf.int32, shape=(3,3))
matph2 = tf.compat.v1.placeholder(tf.int32, shape=(None,3))
# None is for no. of rows or examples in dataset

print(matph1)
print(matph2)
